@*@using Frontend.Models
 @model Consulta
@{
    ViewBag.Title = "Consultas";
    Layout = "~/Views/Shared/_Layout.cshtml";
} *@

<style>
    .calendar_default_event,
    .calendar_default_event_inner {
        border-radius: 15px;
        color: white;
    }

    p,
    label {
        font: 1rem "Fira Sans", sans-serif;
    }

    input {
        margin: 0.4rem;
    }

    .mt-100 {
        margin-top: 100px
    }

   /*  body {
        background: #00B4DB;
        background: -webkit-linear-gradient(to right, #0083B0, #00B4DB);
        background: linear-gradient(to right, #0083B0, #00B4DB);
        color: #514B64;
        min-height: 100vh
    } */
</style>

<script src="~/lib/daypilot/daypilot-all.min.js" asp-append-version="true"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">





<div class="wrap">
    <div class="col-12">
        <div class="accordion m-3" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                        Filtros
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <div class="row    m-0 p-0">
                            <div class="col-2 m-1 mt-0 p-0 form-floating">
                                <select id="cbomedicoF" class="form-select " name="medicoF" autocomplete="off" placeholder="Médico"></select>
                                <label for="cbomedicoF" class="form-label pt-1">Médico</label>
                            </div>

                            <div class=" col-7">
                            </div>
                            <div class="col-1  m-1 ">
                                <button type="button" class="btn btnFiltrar" onclick="filtrarAgenda(1)">Filtrar</button>
                            </div>
                            <div class="col-1  m-1 ">
                                <button type="button" class="btn btnLimpiar" onclick="filtrarAgenda(0)">Limpiar</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-2 left">
                <div id="nav"></div>
            </div>
            <div class="col-10 right">
                <div id="dp"></div>
            </div>
        </div>
    </div>
</div>

<!-- TOAST -->
<div class="contenedor">

    <div class="contenedor-toastP" id="contenedor-toastP">
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header text-white" style="background: #2A3F54">
                <h5 class="modal-title" id="exampleModalLabel">Tomar Turno</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="txtid" type="hidden" value="0" />
                <form id="formNivel" class="row " style="border:solid; border-color:#256080; border-width:2px; height:410px; border-radius: 8px;">
                    <div class="col-12 ">
                        <div class="row m-3">
                            <div class="col-5 m-0 form-floating">
                                <input type="text" class="form-control form-control-sm" disabled id="txtstart" placeholder="Desde" />
                                <label for="txtstart">Desde</label>
                            </div>
                            <div class="col-5 m-0  form-floating">
                                <input type="text" class="form-control form-control-sm" disabled id="txtend" placeholder="Hasta" />
                                <label for="txtend">Hasta</label>
                            </div>
                            <div class="col-2 mt-2   form-floating">
                                <div>
                                    <input type="color" id="colorSelect" name="color" value="#f6b73c" />
                                </div>
                            </div>
                        </div>
                        <div class="row m-3 ">
                            <div class="col-12  form-floating">
                                <select id="cbopaciente" class="form-select " name="paciente" autocomplete="off" placeholder="Paciente"></select>
                                <label for="cbopaciente" class="form-label pt-1">Paciente</label>
                            </div>
                        </div>
                        <div class="row m-3 ">
                            <div class="col-12  form-floating">
                                <select id="cbomedico" class="form-select " name="medico" autocomplete="off" placeholder="Médico"></select>
                                <label for="cbomedico" class="form-label pt-1">Médico</label>
                            </div>
                        </div>


                        <div class="row d-flex justify-content-center m-3">
                            <div class="col-12">
                                <select id="cbodiagnostico" placeholder="Seleccione Diagnósticos" multiple>
                                    @*   <option value="HTML">HTML</option>
                                    <option value="Jquery">Jquery</option>
                                    <option value="CSS">CSS</option>
                                    <option value="Bootstrap 3">Bootstrap 3</option>
                                    <option value="Bootstrap 4">Bootstrap 4</option>
                                    <option value="Java">Java</option>
                                    <option value="Javascript">Javascript</option>
                                    <option value="Angular">Angular</option>
                                    <option value="Python">Python</option>
                                    <option value="Hybris">Hybris</option>
                                    <option value="SQL">SQL</option>
                                    <option value="NOSQL">NOSQL</option>
                                    <option value="NodeJS">NodeJS</option> *@
                                </select>
                            </div>
                        </div>


                        <div class="row m-3 ">
                            <div class="col-12">
                                <div>
                                    <textarea class="form-control" rows="5" placeholder="Observaciones" id="txtobs"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            <div class="row mt-2">
                <div class="col-12">
                    <div id="mensajeError" class="alert-danger" role="alert">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btnCancelar" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btnAceptar" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>


               $(document).ready(function(){

            var multipleCancelButton = new Choices('#cbodiagnostico', {
               removeItemButton: true,
               maxItemCount:100,
               searchResultLimit:100,
               renderChoiceLimit:100
             });


        });

        function load() {
            calendar.events.load("/Consulta/Events");
            calendar.update();

        }

        document.addEventListener("DOMContentLoaded", load, false);



        const pacientes = [];
        const contenedorToast = document.getElementById('contenedor-toastP');
        // Event listener para detectar click en los toasts
        contenedorToast.addEventListener('click', (e) => {

            const toastId = e.target.closest('div.toastP').id;

            if (e.target.closest('button.btn-cerrar')) {
                cerrarToast(toastId);
            }
        });
        // Función para cerrar el toast
        const cerrarToast = (id) => {
            document.getElementById(id)?.classList.add('cerrando');
        };
        // Función para agregar la clase de cerrando al toast.
        const agregarToast = ({ tipo, titulo, descripcion, autoCierre }) => {
            // Crear el nuevo toast
            const nuevoToast = document.createElement('div');

            // Agregar clases correspondientes
            nuevoToast.classList.add('toastP');
            nuevoToast.classList.add(tipo);
            if (autoCierre) nuevoToast.classList.add('autoCierreP');

            // Agregar id del toast
            const numeroAlAzar = Math.floor(Math.random() * 100);
            const fecha = Date.now();
            const toastId = fecha + numeroAlAzar;
            nuevoToast.id = toastId;

            // Iconos
            const iconos = {
                exito: `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                                            <path
                                                d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm10.03 4.97a.75.75 0 0 1 .011 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.75.75 0 0 1 1.08-.022z"
                                            />
                                        </svg>`,
                error: `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                                                        <path
                                                            d="M11.46.146A.5.5 0 0 0 11.107 0H4.893a.5.5 0 0 0-.353.146L.146 4.54A.5.5 0 0 0 0 4.893v6.214a.5.5 0 0 0 .146.353l4.394 4.394a.5.5 0 0 0 .353.146h6.214a.5.5 0 0 0 .353-.146l4.394-4.394a.5.5 0 0 0 .146-.353V4.893a.5.5 0 0 0-.146-.353L11.46.146zM8 4c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995A.905.905 0 0 1 8 4zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"
                                                        />
                                                    </svg>`,
                info: `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                                                        <path
                                                            d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"
                                                        />
                                                    </svg>`,
                warning: `<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                                                        <path
                                                            d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"
                                                        />
                                                    </svg>`,
            };

            // Plantilla del toast
            const toast = `
                                <div class="contenidoP">
                                    <div class="icono">
                                        ${iconos[tipo]}
                                    </div>
                                    <div class="texto">
                                        <p class="titulo">${titulo}</p>
                                        <p class="descripcion">${descripcion}</p>
                                    </div>
                                </div>
                                <button class="btn-cerrar">
                                    <div class="icono">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 16">
                                            <path
                                                d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"
                                            />
                                        </svg>
                                    </div>
                                </button>
                            `;

            // Agregar la plantilla al nuevo toast
            nuevoToast.innerHTML = toast;

            // Agregamos el nuevo toast al contenedor
            contenedorToast.appendChild(nuevoToast);

            // Función para menajera el cierre del toast
            const handleAnimacionCierre = (e) => {
                if (e.animationName === 'cierre') {
                    nuevoToast.removeEventListener('animationend', handleAnimacionCierre);
                    nuevoToast.remove();
                }
            };

            if (autoCierre) {
                setTimeout(() => cerrarToast(toastId), 5000);
            }

            // Agregamos event listener para detectar cuando termine la animación
            nuevoToast.addEventListener('animationend', handleAnimacionCierre);
        };

        //GET PACIENTES
        jQuery.ajax({
            url: '@Url.Action("GetAllPacientes", "Paciente")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "enabled": "true" }).text("Seleccionar").appendTo("#cbopaciente");
                $.each(data.data, function (index, value) {
                    pacientes.push({ id: value.id, name: value.apeyNom });
                    $("<option>").attr({ "value": value.id }).text(value.apeyNom).appendTo("#cbopaciente");
                });
            },
            error: function (error) {
                console.log(error)
            }
        });

        //GET MEDICOS CON AGENDA
        jQuery.ajax({
            url: '@Url.Action("GetMedicosConAgenda", "Medico")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "enabled": "true" }).text("Seleccionar").appendTo("#cbomedicoF");
                $("<option>").attr({ "value": "0", "enabled": "true" }).text("Seleccionar").appendTo("#cbomedico");
                $.each(data.data, function (index, value) {
                    $("<option>").attr({ "value": value.id }).text(value.apeyNom).appendTo("#cbomedicoF");
                   
                });
            },
            error: function (error) {
                console.log(error)
            }
        });



        //GET TODOS LOS MEDICOS
        jQuery.ajax({
            url: '@Url.Action("GetAllMedicos", "Medico")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "enabled": "true" }).text("Seleccionar").appendTo("#cbomedico");
                $.each(data.data, function (index, value) {
                    $("<option>").attr({ "value": value.id }).text(value.apeyNom).appendTo("#cbomedico");
                });
            },
            error: function (error) {
                console.log(error)
            }
        });


        //DIAGNOSTICOS
         //GET PACIENTES
        jQuery.ajax({
            url: '@Url.Action("GetAllDiagnosticos", "Diagnostico")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "enabled": "true" }).text("Seleccionar").appendTo("#cbodiagnostico");
                $.each(data.data, function (index, value) {
                    pacientes.push({ id: value.id, name: value.apeyNom });
                    $("<option>").attr({ "value": value.id }).text(value.descripcion).appendTo("#cbodiagnostico");
                });
            },
            error: function (error) {
                console.log(error)
            }
        });


        const datepicker = new DayPilot.Navigator("nav", {
            showMonths: 3,

            skipMonths: 3,
            selectMode: "Week",
            onTimeRangeSelected: args => {
                calendar.startDate = args.day;

                filtrarAgenda($("#cbomedicoF").val());
                //calendar.events.load("/Consulta/Events");
                calendar.update();


            }

        });
        datepicker.init();
        const calendar = new DayPilot.Calendar("dp", {
            viewType: "Week",
            durationBarVisible: false,
            contextMenu: new DayPilot.Menu({
                items: [
                    {
                        text: "Eliminar Turno",
                        onClick: async (args) => {
                            const e = args.source;
                            const { data } = await DayPilot.Http.delete(`/Consulta/DeleteEvent/${e.id()}`);
                            calendar.events.load("/Consulta/Events");
                            calendar.events.remove(e.id());
                            calendar.update();
                        }
                    }

                ]
            }),
            onTimeRangeSelected: async (args) => {
                abrirModal(args, true);

            },
            onEventMove: async (args) => {
                const c = {
                    text: "",
                    color: "#1066a8",
                    Id: args.e.data.id,
                    start: args.newStart.value,
                    end: args.newEnd.value,
                    IdPaciente: args.e.data.idPaciente,
                };
                const { data } = await DayPilot.Http.put("/Consulta/Move", c);
                //  calendar.events.load("/Consulta/Events");
                //  calendar.update();
            },
            onEventResize: async (args) => {
                const c = {
                    text: "",
                    color: "#1066a8",
                    Id: args.e.data.id,
                    start: args.newStart.value,
                    end: args.newEnd.value,
                    IdPaciente: args.e.data.idPaciente,
                };
                const { data } = await DayPilot.Http.put("/Consulta/Move", c);
            },
            onBeforeEventRender: (args) => {

                args.data.backColor = args.data.color + "99";
                args.data.borderColor = args.data.color;
                args.data.areas = [
                    {
                        top: 6,
                        right: 6,
                        width: 20,
                        height: 20,
                        backColor: args.data.color,
                        symbol: "../icons/daypilot.svg#minichevron-down-2",
                        visibility: "Visible",
                        action: "ContextMenu",
                        style: "border-radius: 15px; cursor:pointer;"
                    }
                ];
            },
            onEventClicked: (args => {
                abrirModal(args, false);
            })
        });

        calendar.init();


        //Filtrar Agenda
        function filtrarAgenda(filtro) {
            debugger;
            if (filtro != 0) {
                var idMedico = $("#cbomedicoF").val();
                calendar.events.load(`/Consulta/EventsByMedico?idMedico=${idMedico}`);
            }
            else {
                $("#cbomedicoF").val(0);
                calendar.events.load(`/Consulta/Events`);

            }

        }





        function abrirModal(args, nuevo) {

            var desde;
            var hasta;
            let selectElement = document.getElementById("colorSelect");
            selectElement.innerHTML = "";
            $("#mensajeError").hide();
            if (!nuevo) {
                desde = desde = moment(args.e.data.start.value);
                hasta = moment(args.e.data.end.value);
                $("#txtstart").val(desde.format('DD-MM-YYYY HH:mm'));
                $("#txtend").val(hasta.format('DD-MM-YYYY HH:mm'));
                debugger;
                $("#cbopaciente").val(args.e.data.idPaciente);
                $("#cbomedico").val(args.e.data.idMedico);
                $("#txtobs").val(args.e.data.text);
                $("#txtid").val(args.e.data.id);
                $("#colorSelect").val(args.e.data.color);
            }
            else {
                desde = desde = moment(args.start.value);
                hasta = moment(args.end.value);
                $("#txtstart").val(desde.format('DD-MM-YYYY HH:mm'));
                $("#txtend").val(hasta.format('DD-MM-YYYY HH:mm'));
                $("#cbopaciente").val(0);
                if ($("#cbomedicoF").val() == 0) {
                    $("#cbomedico").val(0)
                } else {
                    $("#cbomedico").val($("#cbomedicoF").val())
                }

                //$("#cbomedico").val(0);
                $("#txtobs").val("");
                $("#txtid").val(0);
            }
            $("#FormModal").modal("show");
        }

        async function Guardar() {
            if (!$("#formNivel").valid()) {
                return;
            }
            var yyyys = $("#txtstart").val().substring(6, 10);
            var MMs = $("#txtstart").val().substring(3, 5);
            var DDs = $("#txtstart").val().substring(0, 2);
            var HHs = $("#txtstart").val().substring(11, 13).trim();
            var mms = $("#txtstart").val().substring(14, 16).trim();
            var As = $("#txtstart").val().substring(19, 23).trim();
            if (HHs.length == 1) { HHs = '0' + HHs; }

            if (mms.length == 1) { mms = '0' + mms; }

            var yyyye = $("#txtend").val().substring(6, 10);
            var MMe = $("#txtend").val().substring(3, 5);
            var DDe = $("#txtend").val().substring(0, 2);
            var HHe = $("#txtend").val().substring(11, 13).trim();
            var mme = $("#txtend").val().substring(14, 16).trim();
            var Ae = $("#txtend").val().substring(19, 23).trim();
            if (HHe.length == 1) { HHe = '0' + HHe; }

            if (mme.length == 1) { mme = '0' + mme; }

            function obtenerSeleccionados() {
          const select = document.getElementById('cbodiagnostico');
          //const resultado = document.getElementById('resultado');
          let seleccionados = [];
          for (let i = 0; i < select.options.length; i++) {
            if (select.options[i].selected) {
              seleccionados.push(select.options[i].value);
            }
          }
         // resultado.textContent = 'Seleccionados: ' + seleccionados.join(', ');
         return seleccionados;
        }

        const select = document.getElementById('cbodiagnostico');
           var jsonModulo = {
                'datos': []
            };
            for (var i = 0; i <select.options.length; i++) {
                jsonModulo.datos.push({
                    "Id": select.options[i].value,
                    "Descripcion": select.options[i].text
                });
            };
            var json = JSON.stringify(jsonModulo);
            var obj = JSON.parse(json);



            const consu = {
                text: $(`#cbopaciente option:selected`).text(),
                color: $("#colorSelect").val(),//$("#cbocolor").val(),
                Id: $("#txtid").val(),
                start: moment(yyyys + "-" + MMs + "-" + DDs + " " + HHs + ":" + mms).format('YYYY-MM-DDTHH:mm:00'),
                end: moment(yyyye + "-" + MMe + "-" + DDe + " " + HHe + ":" + mme).format('YYYY-MM-DDTHH:mm:00'),
                IdPaciente: $("#cbopaciente").val(),
                IdMedico: $("#cbomedico").val(),
                observaciones: $("#txtobs").val(),
                cdiag: obj.datos//obtenerSeleccionados()
            };
            console.log(consu);

            const { data: event } = await DayPilot.Http.post("/Consulta/CreateEvent", consu);
            if (!event.resultado) {
                agregarToast({ tipo: 'error', titulo: 'Creando Turno', descripcion: event.mensaje, autoCierre: true });
                $("#mensajeError").text(event.mensaje);
                $("#mensajeError").show();
            }
            else {

                // calendar.events.add(consu);
                calendar.events.load("/Consulta/Events");
                calendar.update();

                $("#FormModal").modal("hide");


                // filtrarAgenda();
            }

        }

    </script>
    <script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>


}